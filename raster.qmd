# Raster data

```{r}
#| label: libraries
#| warning: false
library(ggplot2)
library(sf)
library(stars)
library(terra)
library(tmap)
library(units)
```

## Read data into R

```{r}
data("lsl", "study_mask", package = "spDataLarge")
landslides = st_as_sf(
  lsl,
  coords = c("x", "y"), 
  crs = "EPSG:32717"
)
terrain = rast(system.file("raster/ta.tif", package = "spDataLarge"))
terrain = mask(terrain, study_mask)
```

```{r}
#| warning: false
#| message: false
#| fig-width: 15
#| fig-height: 4.5
#| fig-column: page
tm_shape(terrain) +
  tm_raster(
    col.scale = tm_scale_continuous(midpoint = NA),
    col.legend = tm_legend(orientation = "landscape")
  ) +
  tm_facets_hstack() +
  tm_shape(landslides) +
  tm_dots() 
```

## Raster-vector operations

```{r}
head(terra::extract(terrain, landslides))
```

### Predictions

```{r}
fit = glm(lslpts ~ slope + cplan + cprof + elev + log10_carea,
          family = binomial(), data = landslides)
```

```{r}
pred = predict(terrain, model = fit, type = "response")
```

```{r}
#| code-fold: true
tm_shape(pred) +
  tm_raster(
    col.scale = tm_scale_continuous(midpoint = NA, values = "-viridis"),
    col.legend = tm_legend(
      title = "",
      position = tm_pos_in("left", "bottom"),
      width = 10,
      frame = FALSE,
      orientation = "landscape"
    )
  ) +
  tm_title("Landslide susceptibility")
```

## Data cubes

### Satellite imagery

```{r}
tif = system.file("tif/L7_ETMs.tif", package = "stars")
l7 = read_stars(tif)
plot(l7, axes = TRUE)
```

```{r}
l7
l7[,,,3:4]
```

```{r}
#| layout-ncol: 2
plot(l7, rgb = c(3,2,1), reset = FALSE, main = "RGB")    # rgb
plot(l7, rgb = c(4,3,2), main = "False colour (NIR-G-B)") # false colour
```

### Applying functions

```{r}
fn_ndvi = function(red,nir) (nir-red)/(nir+red)
ndvi = st_apply(l7[,,,3:4], 1:2, fn_ndvi)
```

```{r}
tm_shape(ndvi) +
  tm_raster(col.scale = tm_scale_continuous(values = "c4a.pu_gn_div", midpoint = 0))
```

### Climate data

```{r}
precipitation = system.file("nc/test_stageiv_xyt.nc", package = "stars") |>
    read_stars()
precipitation
```

```{r}
nc = system.file("gpkg/nc.gpkg", package = "sf") |> 
  read_sf() |> 
  st_transform(st_crs(precipitation))
  
nc_outline = nc |> 
  st_geometry() |> 
  st_union()
```

```{r}
#| fig-width: 10
#| fig-height: 6
ggplot() +
  geom_stars(data = precipitation[,,,1:12]) +
  scale_fill_viridis_c("Precipitation") +
  geom_sf(data = nc_outline, fill = NA, color = "red") +
  facet_wrap("time", ncol = 4) +
  theme_bw() +
  theme(legend.position = "bottom")
```

### Time series and aggregations

```{r}
precipitation_nc = aggregate(precipitation, by = nc, FUN = max)
```

```{r}
#| fig-width: 8
#| fig-height: 7
plot(precipitation_nc, max.plot = 23, border = 'grey', lwd = 0.5, mfrow = c(5,5))
```

```{r}
#| code-fold: true
#| fig-width: 10
#| fig-height: 9
precipitation_nc |> st_as_sf(long = TRUE) |>
  st_join(nc) |> 
  ggplot() + 
  aes(
    x = as.POSIXct(time),
    y = test_stageiv_xyt.nc
  ) + 
  geom_point() + geom_line() +
  scale_x_datetime(date_breaks = "12 hours", date_labels = "%H:%M") +
  theme(legend.position = "none") +
  facet_wrap(~NAME)
```

```{r}
index_max = function(x) ifelse(all(is.na(x)), NA, which.max(x))
precipitation_max = st_apply(precipitation_nc, "geom", index_max)
```

```{r}
#| fig-width: 10
#| fig-height: 5
precipitation_max$when = st_get_dimension_values(
  precipitation_nc, "time")[precipitation_max$index_max]

plot(precipitation_max["when"], key.pos = 1, main = "time of maximum precipitation")
```

```{r}
#| include: false
# automatically create a bib database for R packages
knitr::write_bib(c(.packages()), 'packages.bib')
```
